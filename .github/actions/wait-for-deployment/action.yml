name: Pantheon - wait for deployment
inputs:
  pantheon_site_machine_name:
    description: ' '
    required: true

  target_env:
    description: ' '
    required: true

runs:
    using: 'composite'
    steps:

      - name: ⏳ Wait for Pantheon Deployment
        id: wait_for_deployment
        shell: bash
        env:
          EXPECTED_SHA: ${{ github.event.pull_request.head.sha }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          INPUT_TARGET_ENV: ${{ inputs.target_env }}
          INPUT_PANTHEON_SITE_NAME: ${{ inputs.pantheon_site_machine_name }}
        run: |
          echo $EXPECTED_SHA
          echo "Polling URL: $URL"
          echo "Waiting for commit SHA: $EXPECTED_SHA"
          URL="https://${INPUT_TARGET_ENV}-${INPUT_PANTHEON_SITE_NAME}.pantheonsite.io/current-sha.txt"

          echo "checking ${URL}"

          for i in {1..1000}; do
            curl -s "$URL?ts=$(date +%s)"
            # Use curl with -s (silent) and capture the output
            # The shell will evaluate this to an empty string on 404s or other errors
            DEPLOYED_SHA=$(curl -s "$URL?ts=$(date +%s)")

            # Trim whitespace from the fetched SHA
            DEPLOYED_SHA_TRIMMED=$(echo "$DEPLOYED_SHA" | xargs)

            if [[ "$DEPLOYED_SHA_TRIMMED" == "$EXPECTED_SHA" ]]; then
              echo "✅ Deployment confirmed! SHA matches."
              exit 0
            fi

            echo "Attempt $i: Waiting for deployment... (current content: '$DEPLOYED_SHA_TRIMMED')"
            sleep 10
          done
